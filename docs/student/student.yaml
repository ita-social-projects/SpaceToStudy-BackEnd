paths:
  /students:
    post:
      security:
        - bearerAuth: []
      tags:
        - Students
      summary: Add and return student
      description: Creates and returns a student
      produces:
        - application/json
      requestBody:
        required: true
        description: Provide required data to create a student
        content:
          application/json:
            schema:
              $ref: '#/definitions/signup'
            example:
              firstName: John
              lastName: Doe
              email: johndoe@gmail.com
              photo: image.png
              password: qwer1234
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                schema:
                  $ref: '#/definitions/student'
                example:
                  _id: 6255bc080a75adf9223df101
                  role: student
                  firstName: John
                  lastName: Doe
                  email: johndoe@gmail.com
                  photo: image.png
                  active: true
                  blocked: false
                  lastLogin: 2022-10-25T11:59:53.243Z
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 400
                code: EMAIL_NOT_VALID
                message: 'Email should be of the following format: “local-part@domain.com”.'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 401
                code: UNAUTHORIZED
                message: The requested URL requires user authorization.

    get:
      security:
        - bearerAuth: []
      tags:
        - Students
      summary: Find all students
      description: Finds and returns an array with a list of students.
      produces:
        - application/json
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/definitions/students'
              example:
                - _id: 6255bc080a75adf9223df101
                  role: student
                  firstName: John
                  lastName: Doe
                  email: johndoe@gmail.com
                  photo: image.png
                  active: true
                  blocked: false
                  lastLogin: 2022-10-25T11:59:53.243Z
                - _id: 6255bc080a75adf9223df102
                  role: student
                  firstName: John
                  lastName: Doe
                  email: johndoe@gmail.com
                  photo: image.png
                  active: true
                  blocked: false
                  lastLogin: 2022-10-22T11:59:53.243Z
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 401
                code: UNAUTHORIZED
                message: The requested URL requires user authorization.
  /students/{id}:
    get:
      security:
        - bearerAuth: []
      tags:
        - Students
      summary: Find and return student by ID
      description: Finds and returns a student with the specified ID.
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the student that needs to be fetched
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/definitions/student'
              example:
                _id: 6255bc080a75adf9223df101
                role: student
                firstName: John
                lastName: Doe
                email: johndoe@gmail.com
                photo: image.png
                active: true
                blocked: false
                isEmailConfirmed: true
                lastLogin: 2022-10-25T11:59:53.243Z
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 400
                code: INVALID_ID
                message: ID is invalid.
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 401
                code: UNAUTHORIZED
                message: The requested URL requires user authorization.
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 404
                code: STUDENT_NOT_FOUND
                message: Student with the specified id or email was not found.
    patch:
      security:
        - bearerAuth: []
      tags:
        - Students
      summary: Find and update student by ID
      description: Updates and returns a student with the specified ID
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the student that needs to be deleted
          type: string
      requestBody:
        required: true
        description: Provide required data to update a student
        content:
          application/json:
            schema:
              $ref: '#/definitions/signup'
            example:
              firstName: John
              lastName: Doe
              email: johndoe@gmail.com
              photo: image.png
              password: qwer1234
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                schema:
                  $ref: '#/definitions/student'
                example:
                  _id: 6255bc080a75adf9223df101
                  role: student
                  firstName: John
                  lastName: Doe
                  email: johndoe@gmail.com
                  photo: image.png
                  active: true
                  blocked: false
                  lastLogin: 2022-10-25T11:59:53.243Z
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 400
                code: INVALID_ID
                message: ID is invalid.
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 401
                code: UNAUTHORIZED
                message: The requested URL requires user authorization.
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 404
                code: STUDENT_NOT_FOUND
                message: Student with the specified id or email was not found.
    delete:
      security:
        - bearerAuth: []
      tags:
        - Students
      summary: Find and delete student by ID
      description: Deletes a student with the specified ID
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the student that needs to be deleted
          type: string
      responses:
        204:
          description: No Content
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 400
                code: INVALID_ID
                message: ID is invalid.
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 401
                code: UNAUTHORIZED
                message: The requested URL requires user authorization.
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 404
                code: STUDENT_NOT_FOUND
                message: Student with the specified id or email was not found.
