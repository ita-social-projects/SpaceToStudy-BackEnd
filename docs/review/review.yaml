paths:
  /reviews:
    get:
      security:
        - bearerAuth: []
      tags:
        - Reviews
      summary: Find all reviews
      description: Finds and returns an array with a list of reviews.
      produces:
        - application/json
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/definitions/reviewResponse'
              example:
                - _id: 6255bc080a75adf9223df100
                  comment: Not bad
                  rating: 4
                  authorId: 6255bc080a75adf9223df211
                  targetUserId: 6255bc080a75adf9223df212
                  targetUserRole: tutor
                  offerId: 6255bc033a75adf9223df231
                  createdAt: 2022-10-18T13:25:36.292Z
                  updatedAt: 2022-10-18T13:25:36.292Z
                - _id: 8755bc080a00adr9243df104
                  comment: Best tutor!
                  rating: 5
                  authorId: 6255bc080a75adf9223df211
                  targetUserId: 6255bc080a75adf9223df212
                  targetUserRole: tutor
                  offerId: 6255bc033a75adf9223df231
                  createdAt: 2022-10-18T13:25:36.292Z
                  updatedAt: 2022-10-18T13:25:36.292Z
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 401
                code: 'UNAUTHORIZED'
                message: 'The requested URL requires user authorization.'
    post:
      security:
        - bearerAuth: []
      tags:
        - Reviews
      summary: Create new review.
      description: Saves a new review the DB.
      produces:
        - application/json
      requestBody:
        required: true
        description: Create new review.
        content:
          application/json:
            schema:
              $ref: '#/definitions/review'
            example:
              comment: Best tutor!
              rating: 5
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/definitions/reviewResponse'
              example:
                comment: Best tutor!
                rating: 5
                authorId: 6255bc080a75adf9223df211
                targetUserId: 6255bc080a75adf9223df212
                targetUserRole: tutor
                offerId: 6255bc033a75adf9223df231
                createdAt: 2022-10-18T13:25:36.292Z
                updatedAt: 2022-10-18T13:25:36.292Z
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 400
                code: REVIEW_NOT_CREATED
                message: You are allowed to leave only one review for a tutor.
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 401
                code: UNAUTHORIZED
                message: The requested URL requires user authorization.
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 403
                code: FORBIDDEN
                message: You do not have permission to perform this action.
  /reviews/{id}:
    get:
      security:
        - bearerAuth: []
      tags:
        - Reviews
      summary: Find review by ID
      description: Finds and returns a reviews with the specified ID.
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the review that needs to be fetched
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/definitions/reviewResponse'
              example:
                _id: 8755bc080a00adr9243df104
                comment: Best tutor!
                rating: 5
                authorId: 6255bc080a75adf9223df211
                targetUserId: 6255bc080a75adf9223df212
                targetUserRole: tutor
                offerId: 6255bc033a75adf9223df231
                createdAt: 2022-10-18T13:25:36.292Z
                updatedAt: 2022-10-18T13:25:36.292Z
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 400
                code: INVALID_ID
                message: ID is invalid.
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 401
                code: UNAUTHORIZED
                message: The requested URL requires user authorization.
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 404
                code: REVIEW_NOT_FOUND
                message: Review with the specified id was not found.
    patch:
      security:
        - bearerAuth: []
      tags:
        - Reviews
      summary: Update review by ID
      description: Finds and update a review with the specified ID.
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          required: true
          description: Review ID
          type: string
      requestBody:
        required: true
        description: Provide required data to reset a password.
        content:
          application/json:
            schema:
              $ref: '#/definitions/review'
            example:
              comment: Best tutor!
              rating: 5
      responses:
        204:
          description: No Content
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 400
                code: INVALID_ID
                message: ID is invalid.
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 401
                code: UNAUTHORIZED
                message: The requested URL requires user authorization.
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 403
                code: FORBIDDEN
                message: You do not have permission to perform this action.
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 404
                code: REVIEW_NOT_FOUND
                message: Review with the specified id was not found.
    delete:
      security:
        - bearerAuth: []
      tags:
        - Reviews
      summary: Find and delete review by ID
      description: Finds and deletes a review with the specified ID.
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the review that needs to be deleted
          type: string
      responses:
        204:
          description: No Content
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 400
                code: INVALID_ID
                message: ID is invalid.
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 401
                code: UNAUTHORIZED
                message: The requested URL requires user authorization.
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 403
                code: FORBIDDEN
                message: You do not have permission to perform this action.
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 404
                code: REVIEW_NOT_FOUND
                message: Review with the specified id was not found.
