trigger:
  batch: true
  branches:
    include:
      - develop
      - main

variables:
  agentOS: ubuntu-latest

stages:
  - stage: Env
    displayName: Download and set latest .env
    jobs:
      - job: Env
        pool:
          vmImage: $(agentOS) 
        steps:
          - task: DownloadSecureFile@1
            name: envStage
            condition: or(eq(variables['Build.SourceBranch'], 'refs/heads/develop'), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
            inputs:
              secureFile: 'env-back-stage'
          - task: Bash@3
            name: setEnvStage
            inputs:
              targetType: 'inline'
              script: 'mv $(envStage.secureFilePath) .env'

  - stage: Build
    displayName: Build and push docker image
    jobs:
      - job: Build
        pool:
          vmImage: $(agentOS)
        steps:
          - task: Docker@0
            inputs:
              containerregistrytype: 'Azure Container Registry'
              azureSubscription: 'S2s-Service'
              azureContainerRegistry: '{"loginServer":"s2sstage.azurecr.io", "id" : "/subscriptions/734fc759-c3a2-4e22-a478-301dc5b10496/resourceGroups/Space2Study/providers/Microsoft.ContainerRegistry/registries/S2sStage"}'
              action: 'Build an image'
              dockerFile: '**/Dockerfile'
              buildArguments: 'MONGODB_URL=$(MONGODB_URL)'
              imageName: '$(ENV_TYPE)_back:$(Build.SourceVersion)'

          - task: Docker@0
            inputs: 
              containerregistrytype: 'Azure Container Registry'
              azureSubscription: 'S2s-Service'
              azureContainerRegistry: '{"loginServer":"s2sstage.azurecr.io", "id" : "/subscriptions/734fc759-c3a2-4e22-a478-301dc5b10496/resourceGroups/Space2Study/providers/Microsoft.ContainerRegistry/registries/S2sStage"}'
              action: 'Push an image'
              imageName: '$(ENV_TYPE)_back:$(Build.SourceVersion)'

  - stage: Deploy
    displayName: Deploy image to app service
    jobs:
      - job: Deploy
        pool:
          vmImage: $(agentOS)
        steps:
          - task: AzureRmWebAppDeployment@4
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: 'S2s-Service'
              appType: 'webAppContainer'
              WebAppName: '$(WEB_APP_NAME)'
              DockerNamespace: 's2sstage.azurecr.io'
              DockerRepository: '$(ENV_TYPE)_back'
              DockerImageTag: '$(Build.SourceVersion)'
