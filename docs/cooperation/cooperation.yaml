paths:
  /cooperations:
    get:
      security:
        - cookieAuth: []
      tags:
        - Cooperations
      summary: Find all cooperations
      description: Finds and returns an array with a list of cooperations.
      produces:
        - application/json
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/definitions/cooperations'
              example:
                - _id: 63ebc6fbd2f34037d0aba314
                  offer: 63ebc6fbd2f34037d0aba791
                  initiator: 6255bc080a75adf9223df212
                  initiatorRole: tutor
                  receiver: 6255bc080a75adf9223df100
                  receiverRole: student
                  price: 200
                  title: 'Violin lessons'
                  status: active
                  needAction: student
                  createdAt: 2021-05-09T11:34:53.243+00:00
                  updatedAt: 2022-07-02T11:59:53.243+00:00
                - _id: 63ebc6fbd2f34037d0aba314
                  offer: 63ebc6fbd2f34037d0aba791
                  initiator: 6255bc080a75adf9223df212
                  initiatorRole: tutor
                  receiver: 6255bc080a75adf9223df100
                  receiverRole: student
                  price: 300
                  title: 'Violin lessons'
                  status: closed
                  needAction: tutor
                  createdAt: 2021-04-09T11:34:53.243+00:00
                  updatedAt: 2022-09-02T11:59:53.243+00:00
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/cooperations/Error'
              example:
                status: 401
                code: 'UNAUTHORIZED'
                message: 'The requested URL requires user authorization.'
    post:
      security:
        - cookieAuth: []
      tags:
        - Cooperations
      summary: Create new cooperation.
      description: Saves a new cooperation the DB.
      produces:
        - application/json
      requestBody:
        required: true
        description: Create new cooperation.
        content:
          application/json:
            schema:
              $ref: '#/definitions/cooperation'
            example:
              offer: 63ebc6fbd2f34037d0aba791
              receiver: 6255bc080a75adf9223df100
              receiverRole: student
              price: 300
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/definitions/cooperation'
              example:
                _id: 8755bc080a00adr9243df104
                offer: 63ebc6fbd2f34037d0aba791
                initiator: 6255bc080a75adf9223df212
                initiatorRole: tutor
                receiver: 6255bc080a75adf9223df100
                receiverRole: student
                price: 300
                title: 'Violin lessons'
                status: pending
                needAction: student
                createdAt: 2021-04-09T11:34:53.243+00:00
                updatedAt: 2022-09-02T11:59:53.243+00:00
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 400
                code: INVALID_ID
                message: ID is invalid.
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 401
                code: UNAUTHORIZED
                message: The requested URL requires user authorization.
  /cooperations/{id}:
    get:
      security:
        - cookieAuth: []
      tags:
        - Cooperations
      summary: Find cooperation by ID
      description: Finds and returns cooperations with the specified ID.
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the cooperation that needs to be fetched
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/definitions/cooperationResponse'
              example:
                _id: 8755bc080a00adr9243df106
                offer: 63ebc6fbd2f34037d0aba791
                initiator:
                  - _id: 6255bc080a75adf9223df100
                    role: [student, tutor]
                    firstName: John
                    lastName: Doe
                    email: johndoe@gmail.com
                    mainSubjects:
                      {
                        student:
                          [
                            {
                              _id: 64593435163b62124ce4c3ab,

                              category: { _id: '6421ed8ed991d46a84721df2', name: Cybersecurity },
                              subjects: [{ _id: '6421ed8ed991d46a84721df2', name: 'XSS Attack' }],
                              isDeletionBlocked: false
                            },
                            {
                              _id: 64593435263b62124ce4c3ck,
                              category: { _id: '6421ed8ed991d46a84721dfa', name: music },
                              subjects: [{ _id: '6422d995d898aa732d038e8f', name: 'Guitar' }],
                              isDeletionBlocked: true
                            }
                          ],
                        tutor:
                          [
                            {
                              _id: 64593435163b62124ce4c3ab,

                              category: { _id: '6421ed8ed991d46a84721df2', name: Cybersecurity },
                              subjects: [{ _id: '6421ed8ed991d46a84721df2', name: 'XSS Attack' }],
                              isDeletionBlocked: false
                            }
                          ]
                      }
                    totalReviews: { student: 10, tutor: 8 }
                    averageRating: { student: 4.5, tutor: 4.9 }
                    nativeLanguage: english
                    address: { country: The USA, city: California }
                    professionalSummary: KNPU H.S. Skovoroda
                    photo: john-doe-photo.jpg
                    status: { student: active, tutor: active, admin: active }
                    lastLogin: null
                    FAQ:
                      {
                        student: [{ question: tutor question, _id: 63525e23bf163f5ea609ff2b, answer: tutor answer }],
                        tutor: [{ question: tutor question, _id: 63525e23bf163f5ea609ff2b, answer: tutor answer }]
                      }
                    videoLink:
                      { student: www.youtube.com/watch?v=ebTnuLRnIOY, tutor: www.youtube.com/watch?v=ebTnuLRnIOY }
                    createdAt: 2021-04-09T11:34:53.243+00:00
                    updatedAt: 2022-09-02T11:59:53.243+00:00
                initiatorRole: student
                receiver:
                  - _id: 8755bc080a00adr9243df104
                    role: [tutor]
                    firstName: Joe
                    lastName: Doe
                    email: joedoe@outlook.com
                    mainSubjects:
                      {
                        tutor:
                          [
                            {
                              _id: 64593435163b62124ce4c3ab,

                              category: { _id: '6421ed8ed991d46a84721df2', name: Cybersecurity },
                              subjects: [{ _id: '6421ed8ed991d46a84721df2', name: 'XSS Attack' }],
                              isDeletionBlocked: false
                            }
                          ],
                        student: []
                      }
                    totalReviews: { student: 0, tutor: 530 }
                    averageRating: { student: 0, tutor: 5 }
                    nativeLanguage: ukrainian
                    address: { country: Ukraine, city: Kharkiv }
                    professionalSummary: KNPU H.S. Skovoroda
                    photo: joe-doe-photo.jpg
                    status: { student: active, tutor: active, admin: active }
                    FAQ:
                      {
                        student:
                          [{ question: student question, _id: 63525e23bf163f5ea609ff2b, answer: student answer }],
                        tutor: [{ question: tutor question, _id: 63525e23bf163f5ea609ff2b, answer: tutor answer }]
                      }
                    videoLink: { tutor: www.youtube.com/watch?v=ebTnuLRnIOY }
                    lastLogin: 2022-09-02T11:59:53.243+00:00
                    createdAt: 2021-04-09T11:34:53.243+00:00
                    updatedAt: 2022-09-02T11:59:53.243+00:00
                receiverRole: tutor
                price: 150
                title: 'Violin lessons'
                status: pending
                sections:
                  {
                    title: Section title,
                    description: Section description,
                    resources:
                      { resource: { fileName: Attachment1, link: '170-Attachment1.pdf' }, resourceType: Attachment }
                  }
                needAction: student
                createdAt: 2022-10-18T13:25:36.292+00:00
                updatedAt: 2022-10-18T13:25:36.292+00:00
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 400
                code: INVALID_ID
                message: ID is invalid.
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 401
                code: UNAUTHORIZED
                message: The requested URL requires user authorization.
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 404
                code: DOCUMENT_NOT_FOUND
                message: Cooperation with the specified id was not found.
    patch:
      security:
        - cookieAuth: []
      tags:
        - Cooperations
      summary: Update cooperation by ID
      description: Finds and update a cooperation with the specified ID.
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          required: true
          description: Cooperation ID
          type: string
      requestBody:
        required: true
        description: Provide required data to update status of cooperation.
        content:
          application/json:
            schema:
              $ref: '#/definitions/cooperation'
            example:
              status: closed
      responses:
        204:
          description: No Content
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 400
                code: INVALID_ID
                message: ID is invalid.
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 401
                code: UNAUTHORIZED
                message: The requested URL requires user authorization.
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 404
                code: DOCUMENT_NOT_FOUND
                message: Cooperation with the specified id was not found.
