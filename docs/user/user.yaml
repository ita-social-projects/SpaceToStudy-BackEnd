paths:
  /users:
    get:
      security:
        - bearerAuth: []
      tags:
        - Users
      summary: Find all users
      description: Finds and returns an array with a list of users.
      produces:
        - application/json
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/definitions/users'
              example:
                - _id: 6255bc080a75adf9223df100
                  role: student
                  firstName: John
                  lastName: Doe
                  email: johndoe@gmail.com
                  lastLogin: null
                - _id: 8755bc080a00adr9243df104
                  role: tutor
                  firstName: Joe
                  lastName: Doe
                  email: joedoe@outlook.com
                  lastLogin: 2022-09-02T11:59:53.243+00:00
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 401
                code: 'UNAUTHORIZED'
                message: 'The requested URL requires user authorization.'
  /users/{userId}:
    get:
      security:
        - bearerAuth: []
      tags:
        - Users
      summary: Find user by ID
      description: Finds and returns a user with the specified ID.
      produces:
        - application/json
      parameters:
        - name: userId
          in: path
          required: true
          description: ID of the user that needs to be fetched
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/definitions/user'
              example:
                _id: 6255bc080a75adf9223df100
                role: student
                firstName: John
                lastName: Doe
                email: johndoe@gmail.com
                isEmailConfirmed: true
                isFirstLogin: true
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 400
                code: 'INVALID_ID'
                message: 'ID is invalid.'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 404
                code: 'UNAUTHORIZED'
                message: 'The requested URL requires user authorization.'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 404
                code: 'USER_NOT_FOUND'
                message: 'User with the specified email or id was not found.'
    delete:
      security:
        - bearerAuth: []
      tags:
        - Users
      summary: Find and delete user by ID
      description: Finds and deletes a user with the specified ID.
      produces:
        - application/json
      parameters:
        - name: userId
          in: path
          required: true
          description: ID of the user that needs to be deleted
          type: string
      responses:
        204:
          description: No Content
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 400
                code: 'INVALID_ID'
                message: 'ID is invalid.'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 401
                code: 'UNAUTHORIZED'
                message: 'The requested URL requires user authorization.'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 404
                code: 'USER_NOT_FOUND'
                message: 'User with the specified email or id was not found.'
