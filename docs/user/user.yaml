components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - bearerAuth: []
paths:
  /users:
    get:
      tags:
        - Users
      summary: Find all users
      description: Finds and returns an array with a list of users.
      produces:
        - application/json
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/definitions/users'
  /users/{userId}:
    get:
      tags:
        - Users
      summary: Find user by ID
      description: Finds and returns a user with the specified ID.
      produces:
        - application/json
      parameters:
        - name: userId
          in: path
          required: true
          description: User Id
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/definitions/user'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 400
                code: 'INVALID_ID'
                message: 'ID is invalid.'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 404
                code: 'USER_NOT_FOUND'
                message: 'User with the specified email or id was not found.'
    delete:
      tags:
        - Users
      summary: Find and delete user by ID
      description: Finds and deletes a user with the specified ID.
      produces:
        - application/json
      parameters:
        - name: userId
          in: path
          required: true
          description: User Id
          type: string
      responses:
        204:
          description: User has been successfully deleted
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 400
                code: 'INVALID_ID'
                message: 'ID is invalid.'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 404
                code: 'USER_NOT_FOUND'
                message: 'User with the specified email or id was not found.'
