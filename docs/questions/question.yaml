paths:
  /questions:
    get:
      security:
        - bearerAuth: []
      tags:
        - Questions
      summary: Find all questions.
      description: Finds and returns an array with a list of all questions.
      produces:
        - application/json
      parameters:
        - in: query
          name: title
          schema:
            type: string
          required: false
        - in: query
          name: sort
          schema:
            type: string
          required: false
        - in: query
          name: skip
          schema:
            type: string
          required: false
        - in: query
          name: limit
          schema:
            type: string
          required: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/definitions/quizBody'
              example:
                items:
                  - _id: 64ca5914b57f2442403394a5
                    title: Is Assembly best programming language?
                    answers:
                      - text: Yes,
                        isCorrect: false
                      - text: Yes, of course,
                        isCorrect: true
                    author: '6477007a6fa4d05e1a800ce5'
                    createdAt: 2023-20-01T13:25:36.292Z
                    updatedAt: 2023-20-01T13:25:36.292Z
                  - _id: 64ca5932b57f2442403394a9
                    title: What is the chemical symbol for water?
                    answers:
                      - text: H2O,
                        isCorrect: false
                      - text: O2H
                        isCorrect: true
                      - text: H2O2
                        isCorrect: true
                    createdAt: 2023-20-01T13:25:36.292Z
                    updatedAt: 2023-20-01T13:25:36.292Z
                    author: '6477007a6fa4d05e1a800ce5'
                count: 2
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 401
                code: UNAUTHORIZED
                message: The requested URL requires user authorization.
  /questions/{id}:
    patch:
      security:
        - bearerAuth: []
      tags:
        - Questions
      summary: Update question by id.
      description: Updates question by id.
      produces:
        - application/json
      parameters:
        - in: params
          name: id
          required: true
          description: id of the question that needs to be updated
          type: string
      requestBody:
        description: Data to update a question
        content:
          application/json:
            schema:
              $ref: '#/definitions/questionBody'
            example:
              title: WebAssembly
      responses:
        204:
          description: No content
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 401
                code: UNAUTHORIZED
                message: The requested URL requires user authorization.
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 403
                code: FORBIDDEN
                message: You do not have permission to perform this action.
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 404
                code: NOT_FOUND
                message: Question with the specified id was not found.
    delete:
      security:
        - bearerAuth: []
      tags:
        - Questions
      summary: Find and delete question by ID
      description: Finds and deletes a question with the specified ID.
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the question that needs to be deleted
          type: string
      responses:
        204:
          description: No Content
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 400
                code: INVALID_ID
                message: ID is invalid.
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 401
                code: UNAUTHORIZED
                message: The requested URL requires user authorization.
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 403
                code: FORBIDDEN
                message: You do not have permission to perform this action.
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 404
                code: DOCUMENT_NOT_FOUND
                message: Question with the specified id was not found.