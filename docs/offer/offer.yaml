paths:
  /offers:
    get:
      security:
        - bearerAuth: []
      tags:
        - Offers
      summary: Find all offers
      description: Finds and returns an array with a list of all offers.
      produces:
        - application/json
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/definitions/offers'
              example:
                - _id: 63ebc6fbd2f34037d0aba791
                  price: 111
                  proficiencyLevel: Beginner
                  description: this is a new blbsksfmlgksjfglk jlskgjslfgkjsflgk l gks lgsl sjglkgj
                  languages: English
                  authorRole: tutor
                  userId: 63e63bb04d1bf3bea00e3d88
                  subjectId: 63da8767c9ad4c9a0b0eacd3
                  categoryId: 63525e23bf163f5ea609ff2b
                - _id: 63ebc6fbd2f34037d0aba791
                  price: 300
                  proficiencyLevel: Advanced
                  description: this is a new 123123123123123 text
                  languages: English, Ukrainian
                  authorRole: tutor
                  userId: 63e63bb04d1bf3bea00e3d88
                  subjectId: 63da8767c9ad4c9a0b0eacd3
                  categoryId: 63525e23bf163f5ea609ff2b
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 401
                code: UNAUTHORIZED
                message: The requested URL requires user authorization.
    post:
      security:
        - bearerAuth: []
      tags:
        - Offers
      summary: Create new offer.
      description: Creates and saves a new offer to the database.
      produces:
        - application/json
      requestBody:
        required: true
        description: Create new offer.
        content:
          application/json:
            schema:
              $ref: '#/definitions/offerBody'
            example:
              price: 300,
              proficiencyLevel: Advanced
              description: this is a new 123123123123123 text
              languages: [English, Ukrainian]
              subjectId: 63da8767c9ad4c9a0b0eacd3
              categoryId: 63525e23bf163f5ea609ff2b
              isActive: false
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/definitions/offer'
              example:
                price: 300
                proficiencyLevel: Advanced
                description: this is a new 123123123123123 text
                languages: [English, Ukrainian]
                authorRole: tutor
                userId": 63e63bb04d1bf3bea00e3d88
                subjectId: 63da8767c9ad4c9a0b0eacd3
                categoryId: 63525e23bf163f5ea609ff2b
                isActive: false
                _id: 63ec1cd51e9d781cdb6f4b14
                createdAt: 2023-02-14T23:44:21.334Z
                updatedAt: 2023-02-14T23:44:21.334Z
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 401
                code: UNAUTHORIZED
                message: The requested URL requires user authorization.
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 403
                code: FORBIDDEN
                message: You do not have permission to perform this action.
  /offers/{id}:
    get:
      security:
        - bearerAuth: []
      tags:
        - Offers
      summary: Find and return offer by ID
      description: Finds and returns a offer with the specified ID.
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the offer that needs to be fetched
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/definitions/offer'
              example:
                _id: 63ec1cd51e9d781cdb6f4b14
                price: 300,
                proficiencyLevel: Advanced
                description: this is a new 123123123123123 text
                languages: [English, Ukrainian]
                authorRole: tutor
                userId: 63e63bb04d1bf3bea00e3d88
                subjectId: 63da8767c9ad4c9a0b0eacd3
                categoryId: 63525e23bf163f5ea609ff2b
                createdAt: 2023-02-14T23:44:21.334Z
                updatedAt: 2023-02-14T23:44:21.334Z
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 400
                code: INVALID_ID
                message: ID is invalid.
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 401
                code: UNAUTHORIZED
                message: The requested URL requires user authorization.
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 404
                code: DOCUMENT_NOT_FOUND
                message: Offer with the specified id was not found.
    patch:
      security:
        - bearerAuth: []
      tags:
        - Offers
      summary: Find and update offer by ID
      description: Updates an offer with the specified ID
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the offer that needs to be deleted
          type: string
      requestBody:
        required: true
        description: Provide required data to update an offer
        content:
          application/json:
            schema:
              $ref: '#/definitions/offer'
            example:
              price: 300,
              proficiencyLevel: Advanced
              description: this is a test text 123
              languages: [Ukrainian, Polish]
              subjectId: 63da8767c9ad4c9a0b0eacd3
              categoryId: 63525e23bf163f5ea609ff2b
      responses:
        204:
          description: No Content
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 400
                code: INVALID_ID
                message: ID is invalid.
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 401
                code: UNAUTHORIZED
                message: The requested URL requires user authorization.
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 403
                code: FORBIDDEN
                message: You do not have permission to perform this action.
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 404
                code: DOCUMENT_NOT_FOUND
                message: Offer with the specified id was not found.
    delete:
      security:
        - bearerAuth: []
      tags:
        - Offers
      summary: Find and delete offer by ID
      description: Deletes an offer with the specified ID
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the offer that needs to be deleted
          type: string
      responses:
        204:
          description: No Content
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 400
                code: INVALID_ID
                message: ID is invalid.
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 401
                code: UNAUTHORIZED
                message: The requested URL requires user authorization.
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 403
                code: FORBIDDEN
                message: You do not have permission to perform this action.
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 404
                code: DOCUMENT_NOT_FOUND
                message: Offer with the specified id was not found.
