paths:
  /admins:
    get:
      security:
        - bearerAuth: []
      tags:
        - Admins
      summary: Find all admins
      description: Finds and returns an array with a list of admins.
      produces:
        - application/json
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/definitions/admins'
              example:
                - _id: 6255bc080a75adf9223df100
                  firstName: John
                  lastName: Doe
                  email: johndoe@gmail.com
                - _id: 8755bc080a00adr9243df104
                  firstName: Joe
                  lastName: Doe
                  email: joedoe@outlook.com
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 401
                code: 'UNAUTHORIZED'
                message: 'The requested URL requires user authorization.'
  /admins/{userId}:
    get:
      security:
        - bearerAuth: []
      tags:
        - Admins
      summary: Find admin by ID
      description: Finds and returns an admin with the specified ID.
      produces:
        - application/json
      parameters:
        - name: userId
          in: path
          required: true
          description: ID of the admin that needs to be fetched
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/definitions/admin'
              example:
                _id: 6255bc080a75adf9223df100
                firstName: John
                lastName: Doe
                email: johndoe@gmail.com
                isEmailConfirmed: true
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 400
                code: 'INVALID_ID'
                message: 'ID is invalid.'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 401
                code: 'UNAUTHORIZED'
                message: 'The requested URL requires user authorization.'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 404
                code: 'USER_NOT_FOUND'
                message: 'User with the specified email or id was not found.'
